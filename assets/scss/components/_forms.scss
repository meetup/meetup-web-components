.inputContainer {
	position: relative;
}

//
// Labels
//
.label--field {
	padding-bottom: $space-half;
	display: inline-block;
}

.label--minor {
	font-weight: normal;
}

.radio {
	cursor: pointer;
	display: inline-block;
	font-size: $font-size;
	height: $font-size;
	line-height: 1;
	line-height: $line-height;
	margin: 0 $space-half 0 0;

	@include browser-lessThanIE(10) {
		top: $space/2;
	}
}

//
// Validation styles
//
.field--error {
	border-color: $C_attention !important;
	&:focus {
		border-color: $C_attention !important;
	}
}

//
// Reset field styles
//
select.field--reset,
input.field--reset,
input.field--reset:hover,
input.field--reset:focus,
input.field--reset:active {
	@include resetFieldStyles;

	.inverted & {
		@include resetFieldStyles;
	}

}

//
// Styles for a field with an icon
//
.field--withIcon {
	background-repeat: no-repeat;
	background-position: $space center;
}

//
// Styles to visually mimic inputs
//
.fauxInput {
	@include formInput();

	// manually changing height to match other inputs
	height: ($font-size * $line-height) + $space*2;

	&.disabled {
		@include formInput--disabled();
	}

	&:hover {
		@include formInput--hovered();
	}

	&.focused {
		@include formInput--focused();
	}

	&.error {
		border-color: $C_attention !important;
	}

	.inverted & {
		background-color: $C_contentBGInverted;
		border-color: $C_borderInverted;
		color: $C_textPrimaryInverted;

		&:hover {
			border-color: $C_borderDarkInverted;
		}

		&[disabled] {
			background-color: $C_borderInverted;
			border-color: transparent;
			color: $C_textSecondaryInverted;

			&:hover {
				background-color: $C_borderInverted;
			}

		}

	}

}

//
// Radio and Checkbox styles
//
$toggleSize: 20px;
$C_toggleHighlight: $C_blue;

.toggleLabel {
	padding-bottom: $space-half;

	.toggleLabel-container,
	.toggleLabel-container:last-child {
		padding-left: $space-half;
	}

	&:hover {

		.fauxToggle {
			border-color: $C_toggleHighlight;

			&.checked {
				background-color: darken($C_toggleHighlight, 15%);
			}

			&.disabled {
				background-color: $C_white;
				border-color: $C_textHint;
			}

		}

	}

}

.fauxToggle {
	background: $C_white;
	border: 1px solid $C_textSecondary;
	height: $toggleSize;
	width: $toggleSize;

	.svg-icon {
		@include color-all($C_textPrimaryInverted);
	}

	&.checked {
		background-color: $C_toggleHighlight;
		border-color: transparent;
	}

	&.disabled {
		@include color-all($C_textHint);
		border-color: $C_textHint;

		&.checked {
			background-color: $C_white;
			border-color: $C_textHint;
		}
	}

	&.focused {
		border-color: $C_toggleHighlight;

		&.checked {
			box-shadow: 0 0 4px 1px $C_toggleHighlight;
		}
	}

}

.radio:focus {
	+ .fauxToggle {
		border-color: $C_toggleHighlight;

		&.checked {
			box-shadow: 0 0 4px 1px $C_toggleHighlight;
		}
	}
}

.fauxToggle--checkbox {
	border-radius: $smallRadius;
}

.fauxToggle--radio,
.radio-indicator {
	border-radius: 50%;
}

.radio-indicator {
	background-color: white;
	display: block;
	height: 8px;
	width: 8px;
}

//
// Select input
//
.select--reset {
	-webkit-user-select: none;
	-moz-user-select: -moz-none;
	-ms-user-select: none;
	user-select: none;

	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;

	&::-ms-expand {
		display: none;
	}

	&:focus::-ms-value {
		background: transparent;
		color: $C_textPrimary;
	}
}

.select-customArrow {
	bottom: $space; // 4px is for margin between forms
	position: absolute;
	pointer-events: none;
	right: $space;
}

.padding--selectArrow {
	padding-right: $media-xs + $space + $space-half;
	// $media-xs:   enough padding for the arrow
	// $space:      preserve right padding in forms
	// $space-half: give a little space between the arrow and the text
}

//
// Time input
//
.timeInput-meridianContainer {
	margin-left: auto;
}

.timeInput-meridian:focus {
	font-weight: $W_medium;
}

.fauxInput--time input {
	height: 100%; // IE fix
}

//
// Character counter
//
.charCount {
	bottom: 0;
	position: absolute;
	right: $space-half;
}
