$avatarBg: $C_coolGrayLight;

@mixin avatarIconBadge($color) {
	position: relative;
	text-indent: 0;

	.svg--avatarBadge {
		bottom: -6%;
		height: 44%;
		position: absolute;
		right: -6%;
		width: 44%;

		// circle behind the icon
		&::before {
			background-color: $color;
			border-radius: 100%;
			bottom: 0;
			content: "";
			left: 0;
			position: absolute;
			right: 0;
			top: 0;
		}

		// the icon itself
		svg {
			@include color-svg(getPrimaryTextColor($color));
			height: 80%;
			transform: translate(12%, 12%);
			width: 80%;
		}
	}

	// Use proportionally smaller badge for larger avatars
	&.avatar--large .svg--avatarBadge,
	&.avatar--xxlarge .svg--avatarBadge {
		bottom: 0;
		height: 30%;
		right: 0;
		width: 30%;
	}
}

%avatar,
.avatar {
	@extend %imgFill;
	background-color: $avatarBg;
	background-position: center 42%;
	color: transparent;
	display: inline-block;
	font-size: 0;
	height: var(--responsiveMedia-m);
	position: relative;
	text-indent: 100%;
	vertical-align: top;
	white-space: nowrap;
	width: var(--responsiveMedia-m);

	.inverted & {
		background: $C_textHintInverted;
	}
}

//
// Printable avatar image tag
// (hidden by default)
//
.avatar-print {
	display: none;
	speak: none;
}

@media print {
	.avatar-print {
		display: block;
		width: 100%;
	}
}

//
// Size variants
//
.avatar--small {
	height: var(--responsiveMedia-s);
	width: var(--responsiveMedia-s);
}

.avatar--medium {
	height: $block-1;
	width: $block-1;
}

.avatar--large {
	height: $space-4;
	width: $space-4;

	@include atMediaUp(medium) {
		height: $block-2;
		width: $block-2;
	}
}

.avatar--xxlarge {
	height: var(--space-6);
	width: var(--space-6);
}

//
// Type variants
//
.avatar--person {
	@extend %avatar;
	border-radius: 999px;
	box-sizing: border-box;
	vertical-align: middle;
}

.avatar--noPhoto {
	align-items: center;
	background-color: darken($avatarBg, 6%);
	display: inline-flex;
	justify-content: center;
	position: relative;
	text-indent: 0;
}

.avatarIcon--noPhoto {
	// center the SVG element within the wrapper
	align-items: center;
	height: 100%;
	justify-content: center;
	// matches size of icon wrapper div
	// to the size of the avatar
	width: 100%;

	// must be scoped to `avatarIcon--noPhoto`,
	// as it's possible to have additional `Icon`
	// children in `Avatar`
	svg {
		height: 40%;
		opacity: alpha($C_textSecondary);
		// sets SVG size relative to wrapper
		width: 40%;
	}
}

.avatar--fbFriend {
	@include avatarIconBadge($C_facebook);
}

.avatar--org {
	@include avatarIconBadge($C_red);
}
