@import "~swarm-constants/dist/scss/rawColors";

/*doc
---
title: Avatar
name: avatar
category: UI Components
---

```html_example
<ul class="inlineblockList">
	<li>
		<a href="#" class="avatar avatar--person" style="background-image: url(http://photos3.meetupstatic.com/photos/member/9/1/8/4/thumb_141217252.jpeg);">Member Name</a>
	</li>
	<li>
		<a href="#" class="avatar avatar--person avatar--small" style="background-image: url(http://photos3.meetupstatic.com/photos/member/9/1/8/4/thumb_141217252.jpeg);">Member Name</a>
	</li>
	<li>
		<a href="#" class="avatar avatar--person avatar--big" style="background-image: url(http://photos4.meetupstatic.com/photos/member/d/0/2/c/member_156833292.jpeg);">Member Name</a>
	</li>
	<li>
		<a href="#" class="avatar avatar--person avatar--fbFriend" style="background-image: url(http://photos4.meetupstatic.com/photos/member/5/a/2/thumb_109681442.jpeg);">Member Name</a>
	</li>
</ul>
```

## Avatar variants
A base class of `avatar` is __required__. The following classes are
optional variants:

Class                     | Description
------------------------- | ------------------------------------
`avatar--small`           | Adjusts avatar size to the smallest media size
`avatar--big`             | Adjusts avatar size to the biggest media size
`avatar--person`          | Variant for people
`avatar--org`             | Variant for organizers
`avatar--fbFriend`        | Variant for facebook friends
`avatar--noPhoto`         | Resets `text-indent` for avatars without photos, allowing display of fallback content
*/

$avatarBg: $C_coolGrayLight;
$avatarBgRaw: $RAW_coolGrayLight;

@mixin avatarIconBadge($color) {
	position: relative;
	text-indent: initial;

	.svg--avatarBadge {
		position: absolute;
		bottom: -6%;
		right: -6%;
		width: 44%;
		height: 44%;

		// circle behind the icon
		&:before {
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			content: "";
			background-color: $color;
			border-radius: 100%;
		}

		// the icon itself
		svg {
			@include color-svg(getPrimaryTextColor($color));
			width: 80%;
			height: 80%;
			transform: translate(12%, 12%);
		}
	}

	// Use proportionally smaller badge for larger avatars
	&.avatar--large .svg--avatarBadge,
	&.avatar--xxlarge .svg--avatarBadge {
		width: 30%;
		height: 30%;
		bottom: 0;
		right: 0;
	}
}

%avatar,
.avatar {
	@extend %imgFill;
	width: var(--media-m);
	height: var(--media-m);
	position: relative;
	background-color: $avatarBg;
	background-position: center 42%;
	color: transparent;
	display: inline-block;
	font-size: 0;
	text-indent: 100%;
	white-space: nowrap;
	vertical-align: top;

	.inverted & {
		background: $C_textHintInverted;
	}

}

//
// Printable avatar image tag
// (hidden by default)
//
.avatar-print {
	speak: none;
	display: none;
}
@media print {
	.avatar-print {
		width: 100%;
		display: block;
	}
}

//
// Size variants
//
.avatar--small {
	width: var(--media-s);
	height: var(--media-s);
}

.avatar--large {
	height: $space-4;
	width: $space-4;

	@include atMediaUp(medium) {
		height: $block-2;
		width: $block-2;
	}
}

.avatar--xxlarge {
	width: var(--media-xxl);
	height: var(--media-xxl);
}

//
// Type variants
//
.avatar--person {
	@extend %avatar;
	vertical-align: middle;
	border-radius: 999px;
	box-sizing: border-box;
}

.avatar--noPhoto {
	@include display(inline-flex);
	@include align-items(center);
	@include justify-content(center);
	position: relative;
	text-indent: initial;
	background-color: darken($avatarBgRaw, 6%);

	.svg--profile {
		// matches size of icon wrapper div
		// to the size of the avatar
		width: 100%;
		height: 100%;

		// center the SVG element within the wrapper
		@include display(inline-flex);
		@include align-items(center);
		@include justify-content(center);

		// must be scoped to `svg--profile`,
		// as it's possible to have additional `Icon`
		// children in `Avatar`
		svg {
			// sets SVG size relative to wrapper
			width: 40%;
			height: 40%;

			transform: translateX(4%);
			opacity: alpha($RAW_textSecondary);
		}
	}
}

.avatar--fbFriend {
	@include avatarIconBadge($RAW_facebook);
}

.avatar--org {
	@include avatarIconBadge($RAW_red);
}
