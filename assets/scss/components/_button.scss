/*doc
---
title: Button personality placeholder
name: buttonPersonality
parent: button
---
Disables user-select, sets cursor, and resets text-decoration.

```
@extend %buttonPersonality;
```
*/
%buttonPersonality {
	@include user-select(none);
	cursor: pointer;
	text-decoration: none !important;
}

/*doc
---
title: Button base mixin
name: buttonBaseMixin
parent: buttons
---
Applies base button styles using a mixin.

_(The `extend` directive can cause ugly cascade problems)_

```
@include buttonBase();
```
*/

@mixin buttonBase() {
	@extend %buttonPersonality;
	@include display(inline-flex);
	@include flex-direction(row);
	@include justify-content(center);
	@include align-items(center);
	@include transition(background .15s);
	box-sizing: border-box;
	-webkit-appearance: none;
	border-radius: 6px;
	font-size: $font-size-small;
	line-height: $line-height-smallText;
	outline: 0;
	padding: $space-half $space-double;
	vertical-align: middle;

	@include browser-ie11() {
		min-height: 0;
		padding-top: 0.33em;
		padding-bottom: 0.5em;
	}
}

/*doc
---
title: Button base mixin
name: buttonBaseMixin
parent: buttons
---
Applies button color-related styles using a mixin.

```
@include buttonColor();
```
*/
@mixin buttonColor(
	$bgColor: $C_blue,
	$hoverColor: darken($bgColor, 5%),
	$activeColor: darken($bgColor, 12%),
	$textColor: getPrimaryTextColor($bgColor)
) {
	@include color-all($textColor);
	background: $bgColor;

	&:hover {
		transition: all 0.4s $animate_easeOutQuad;
		svg {
			transition: fill 0.4s $animate_easeOutQuad;
		}
	}


	&:hover,
	&:focus {
		background: $hoverColor;
	}

	&:active {
		background: $activeColor;
	}
}

/*doc
---
title: Pill base mixin
name: pillBaseMixin
parent: buttons
---
Applies base pill styles using a mixin (for tokens and toggle pills)

_(The `extend` directive can cause ugly cascade problems)_

```
@include pillBase();
```
*/
@mixin pillBase() {
	@extend %buttonPersonality;
	@extend %text--small;
	@include align-items(center);
	@include display(inline-flex);
	@include flex-direction(row);
	@include justify-content(center);
	@include standardBorder(none);
	@include transition(background .15s);
	@include buttonColor(
		$textColor: $C_textSecondary
	);
	box-sizing: border-box;
	-webkit-appearance: none;
	border-radius: $defaultRadius;
	margin: 0;
	outline: 0;
	padding: $space-half $space;
	vertical-align: middle;

	.inverted & {
		@include buttonColor(
			$bgColor: $C_buttonBGNeutralInverted,
			$hoverColor: opacify($C_buttonBGNeutralInverted, .05),
			$activeColor: opacify($C_buttonBGNeutralInverted, .1),
			$textColor: $C_textSecondaryInverted
		);
	}
}

//
// Default buttons
//
.button {
	@include buttonBase();
	@include buttonColor();

	.inverted & {
		@include buttonColor(
			$bgColor: $C_fieldBGInverted,
			$hoverColor: opacify($C_fieldBGInverted, .05),
			$activeColor: opacify($C_fieldBGInverted, .1),
			$textColor: $C_textSecondaryInverted
		);
	}
}

//
// Primary buttons
//
%button--primary,
.button--primary {
	@include buttonColor(
		$bgColor: $C_accent,
		$hoverColor: darken($C_accent, 10%),
		$activeColor: darken($C_accent, 15%)
	);
	.inverted & {
		@include buttonColor(
			$bgColor: $C_contentBG,
			$hoverColor: transparentize($C_contentBG, .2),
			$activeColor: transparentize($C_contentBG, .4)
		);
	}
}

//
// Subtle/neutral buttons
//
%button--neutral,
.button--neutral {
	@include buttonColor(
		$bgColor: $C_buttonBGNeutral,
		$hoverColor: opacify($C_buttonBGNeutral, .05),
		$activeColor: opacify($C_buttonBGNeutral, .1),
		$textColor: $C_textSecondary
	);
	.inverted & {
		@include buttonColor(
			$bgColor: $C_buttonBGNeutralInverted,
			$hoverColor: opacify($C_buttonBGNeutralInverted, .05),
			$activeColor: opacify($C_buttonBGNeutralInverted, .1),
			$textColor: $C_textSecondary
		);
		@include color-all($C_textSecondaryInverted);
	}
}

//
// Bordered buttons
//
.button--bordered {
	@include buttonColor(
		$bgColor: $C_contentBG,
		$hoverColor: $C_contentBG,
		$activeColor: $C_lightGray
	);
	@include shadowOnHover();
	border: 1px solid $C_border;

	&:hover, &:focus {
		border-color: transparent;
	}

	$C_borderedHoverBase: transparentize($C_textPrimary, .4);
	.inverted & {
		@include buttonColor(
			$bgColor: $C_textSecondary,
			$hoverColor: lighten(transparentize($C_textSecondary, .2), 12%),
			$activeColor: lighten(transparentize($C_textSecondary, .2), 23%)
		);
		border: 1px solid $C_borderInverted;

		&:hover, &:focus {
			border-color: $C_borderDarkInverted, .1;
			transform: translateY(0);
		}

	}
}

.button--hasHoverShadow {
	@include shadowOnHover();
	&.button--disabled,
	&[disabled] {
		box-shadow: none;
	}
}

//
// Disabled buttons
//
.button[disabled],
.button--disabled {
	@include buttonColor(
		$bgColor: $C_buttonBGNeutral--disabled,
		$hoverColor: $C_buttonBGNeutral--disabled,
		$activeColor: $C_buttonBGNeutral--disabled,
		$textColor: $C_textHint
	);
	outline: none;
	cursor: default;

	.inverted & {
		@include buttonColor(
			$bgColor: $C_buttonBGNeutralInverted--disabled,
			$hoverColor: $C_buttonBGNeutralInverted--disabled,
			$activeColor: $C_buttonBGNeutralInverted--disabled,
			$textColor: $C_textHintInverted
		);
		@include color-all($C_textHintInverted);
	}

}

//
// Reset buttons
//
.button--reset {
	@include buttonColor(
		$bgColor: transparent,
		$hoverColor: transparent,
		$activeColor: transparent,
		$textColor: $C_textPrimary
	);
	border-radius: 0;
	padding: 0;

	&,
	&.button--disabled,
	&.button[disabled] {
		@include buttonColor(
			$bgColor: transparent,
			$hoverColor: transparent,
			$activeColor: transparent,
			$textColor: $C_textPrimary
		);
	}

	.inverted & {
		@include buttonColor(
			$bgColor: transparent,
			$hoverColor: transparent,
			$activeColor: transparent,
			$textColor: $C_textPrimaryInverted
		);
	}
}

//
// Button size modifiers
//
%button--small,
.button--small {
	border-radius: $defaultRadius;
	padding: $space-quarter $space;
}

//
// Full width button
//
%button--fullWidth,
.button--fullWidth,
.button.span-100 {
	display: block;
	text-align: center;
	width: 100%;
}

//
// Icon buttons
//
.button-label,
.button-icon {
	@include align-self(center);
}

.button-label {
	text-align: center;

	// this full shorthand property for `flex`
	// is required to prevent IE11 from "shrinkwrapping" text nodes
	@include flex(1 1 auto);

	.button-icon-wrapper & {
		padding-left: $space/4;
	}

	.button-icon-wrapper--right & {
		padding-right: $space/4;
	}

}
